{"version":3,"sources":["components/Nav.style.js","assets/images/currex.png","components/Nav.js","components/Container.style.js","components/Hero.style.js","components/Hero.js","components/Converter.style.js","components/Amount.js","components/Option.array.js","components/CurrencyExchange.js","components/Converter.js","App.js","index.js"],"names":["NavStyle","styled","nav","LogoStyle","img","BaseCurrContainerStyle","div","src","logoBrand","alt","disabled","Container","HeroDiv","HeroText","p","HeroTime","button","Hero","useState","Date","date","setDate","useEffect","timer","setInterval","clearInterval","getDate","slice","toLocaleString","month","getFullYear","ConverterBox","Amount","amount","onAmountChange","amountConverted","type","value","onChange","className","toFixed","options","CurrencyExchange","firstCurr","setFIrstCurr","secondCurr","setSecondCurr","currentRate","setCurrentRate","setAmount","setAmountConverted","getAmount","a","axios","get","res","data","info","rate","result","htmlFor","name","e","target","defaultValue","id","map","item","Converter","App","Nav","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b95ba293.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const NavStyle = styled.nav`\r\n  grid-column: 1/15;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const LogoStyle = styled.img`\r\n  width: 100px;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const BaseCurrContainerStyle = styled.div`\r\n  margin-right: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  & p {\r\n    color: #f1faee;\r\n    text-transform: uppercase;\r\n    font-size: 1.5rem;\r\n    letter-spacing: .5rem;\r\n  }\r\n  & button {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 5px 10px 5px 10px;\r\n    background-color: #e63946;\r\n    width: 90px;\r\n    color: #f1faee;\r\n    border: none;\r\n    font-size: 1.5rem;\r\n    margin-left: 2rem;\r\n\r\n    & img {\r\n      width: 30px;\r\n      overflow: hidden;\r\n      background-color: #e63946;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/currex.3d312941.png\";","import React from \"react\";\r\nimport {LogoStyle, BaseCurrContainerStyle} from \"./Nav.style\"\r\nimport logoBrand from '../assets/images/currex.png'\r\nimport { NavStyle } from \"./Nav.style\";\r\n\r\nconst nav = () => {\r\n  return (\r\n    <NavStyle>\r\n      <div>\r\n        <LogoStyle src={logoBrand} alt=\"\" />\r\n      </div>\r\n\r\n      <BaseCurrContainerStyle>\r\n        <p>BASE CURRENCY</p>\r\n        <button disabled>\r\n          USD\r\n          <img\r\n            src=\"https://img.icons8.com/color/48/000000/usa.png\"\r\n            alt=\"indianFlag\"\r\n          />\r\n        </button>\r\n      </BaseCurrContainerStyle>\r\n    </NavStyle>\r\n  );\r\n};\r\n\r\nexport default nav;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    grid-row-gap: 5rem;\r\n    padding-left: 3rem;\r\n    display: grid;\r\n    grid-template-columns: 1fr repeat(12, minmax(min-content,10rem)) 1fr;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const HeroDiv = styled.div`\r\n    grid-column: 2/14;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const HeroText = styled.p`\r\n    font-size: 5rem;\r\n    font-weight: 600;\r\n    /* padding-left: 40px; */\r\n    color: #f1faee;\r\n    letter-spacing: -0.1rem;\r\n    line-height: 5rem;\r\n`\r\n\r\nexport const HeroTime = styled.button`\r\n    background-color: #e63946;\r\n    color: #f1faee;\r\n    font-size: 2rem;\r\n    width: 20rem;\r\n    height: 5rem;\r\n    outline: none;\r\n    margin-top: 2rem;\r\n    border: none;\r\n`","import React, { useEffect, useState } from \"react\";\r\nimport { HeroText, HeroTime, HeroDiv } from \"./Hero.style\";\r\n\r\nconst Hero = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HeroDiv>\r\n        <HeroText>\r\n          Currex Live\r\n          <br />\r\n          Exchange Rates\r\n        </HeroText>\r\n        <HeroTime>{`${(\"0\" + date.getDate()).slice(\r\n          -2\r\n        )}th  ${date.toLocaleString(\"default\", {\r\n          month: \"long\",\r\n        })}  ${date.getFullYear()}`}</HeroTime>\r\n      </HeroDiv>\r\n      <div></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ConverterBox = styled.div`\r\n  grid-column: 3/13;\r\n  background-color: #f1faee;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(30rem, auto));\r\n  justify-content: center;\r\n  padding: 5rem 3rem;\r\n\r\n  & div {\r\n    background-color: #f1faee;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    & h1 {\r\n      background-color: #f1faee;\r\n      font-size: 3rem;\r\n      line-height: 25px;\r\n      font-weight: lighter;\r\n      color: #e63946;\r\n      text-transform: uppercase;\r\n    }\r\n    & p {\r\n      font-size: 1rem;\r\n      color: black;\r\n      background-color: #f1faee;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n\r\n  & .convertor {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    justify-content: flex-start;\r\n    \r\n    & .from,\r\n    & .to {\r\n      height: 100%;\r\n      margin-top: 10%;\r\n      & label {\r\n        font-size: 1rem;\r\n        background-color: #f1faee;\r\n        text-transform: uppercase;\r\n        text-align: left;\r\n      }\r\n      & select {\r\n        width: 80%;\r\n        height: 50%;\r\n        font-size: 1.5rem;\r\n        background-color: #a8dadc;\r\n        border: 3px solid #457b9d;\r\n        text-align: center;\r\n        & option {\r\n          width: 100%;\r\n          height: 10%;\r\n          font-size: 1.5rem;\r\n          background-color: #a8dadc;\r\n        }\r\n      }\r\n    }\r\n\r\n    & .swapButtonDiv{\r\n      width: 100%;\r\n      height: 80%;\r\n      background: #f1faee;\r\n      grid-column: 1/3;\r\n    }\r\n\r\n    & .swapButton{\r\n      width: 20rem;\r\n      height: 5rem;\r\n      background-color: #e63946;\r\n      color: white;\r\n      font-size: 2rem;\r\n      transition: .5s all;\r\n      &:hover{\r\n        background-color: red;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .amount {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    & input {\r\n      width: 60%;\r\n      height: 20%;\r\n      background-color: #a8dadc;\r\n      border: 3px solid #457b9d;\r\n      outline: none;\r\n      color: black;\r\n      font-size: 2rem;\r\n      padding: 2rem;\r\n    }\r\n      & .rate {\r\n        font-size: 2rem;\r\n      }\r\n      & .convertedAmount{\r\n        font-size: 2.5rem;\r\n        border-bottom: thick double #457b9d;\r\n      }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nconst Amount = ({ amount, onAmountChange, amountConverted }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n          <p>Amount</p>\r\n        <input type=\"number\" value={amount} onChange={onAmountChange} />\r\n      </div>\r\n      <div>\r\n        <p className=\"convertedAmount\">{amountConverted.toFixed(2)}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Amount;\r\n","export const options = [\r\n    \"AED\",\r\n    \"AFN\",\r\n    \"ALL\",\r\n    \"AMD\",\r\n    \"ANG\",\r\n    \"AOA\",\r\n    \"ARS\",\r\n    \"AUD\",\r\n    \"AWG\",\r\n    \"AZN\",\r\n    \"BAM\",\r\n    \"BBD\",\r\n    \"BDT\",\r\n    \"BGN\",\r\n    \"BHD\",\r\n    \"BIF\",\r\n    \"BMD\",\r\n    \"BND\",\r\n    \"BOB\",\r\n    \"BRL\",\r\n    \"BSD\",\r\n    \"BTC\",\r\n    \"BTN\",\r\n    \"BWP\",\r\n    \"BYN\",\r\n    \"BZD\",\r\n    \"CAD\",\r\n    \"CDF\",\r\n    \"CHF\",\r\n    \"CLF\",\r\n    \"CLP\",\r\n    \"CNH\",\r\n    \"CNY\",\r\n    \"COP\",\r\n    \"CRC\",\r\n    \"CUC\",\r\n    \"CUP\",\r\n    \"CVE\",\r\n    \"CZK\",\r\n    \"DJF\",\r\n    \"DKK\",\r\n    \"DOP\",\r\n    \"DZD\",\r\n    \"EGP\",\r\n    \"ERN\",\r\n    \"ETB\",\r\n    \"EUR\",\r\n    \"FJD\",\r\n    \"FKP\",\r\n    \"GBP\",\r\n    \"GEL\",\r\n    \"GGP\",\r\n    \"GHS\",\r\n    \"GIP\",\r\n    \"GMD\",\r\n    \"GNF\",\r\n    \"GTQ\",\r\n    \"GYD\",\r\n    \"HKD\",\r\n    \"HNL\",\r\n    \"HRK\",\r\n    \"HTG\",\r\n    \"HUF\",\r\n    \"IDR\",\r\n    \"ILS\",\r\n    \"IMP\",\r\n    \"INR\",\r\n    \"IQD\",\r\n    \"IRR\",\r\n    \"ISK\",\r\n    \"JEP\",\r\n    \"JMD\",\r\n    \"JOD\",\r\n    \"JPY\",\r\n    \"KES\",\r\n    \"KGS\",\r\n    \"KHR\",\r\n    \"KMF\",\r\n    \"KPW\",\r\n    \"KRW\",\r\n    \"KWD\",\r\n    \"KYD\",\r\n    \"KZT\",\r\n    \"LAK\",\r\n    \"LBP\",\r\n    \"LKR\",\r\n    \"LRD\",\r\n    \"LSL\",\r\n    \"LYD\",\r\n    \"MAD\",\r\n    \"MDL\",\r\n    \"MGA\",\r\n    \"MKD\",\r\n    \"MMK\",\r\n    \"MNT\",\r\n    \"MOP\",\r\n    \"MRO\",\r\n    \"MRU\",\r\n    \"MUR\",\r\n    \"MVR\",\r\n    \"MWK\",\r\n    \"MXN\",\r\n    \"MYR\",\r\n    \"MZN\",\r\n    \"NAD\",\r\n    \"NGN\",\r\n    \"NIO\",\r\n    \"NOK\",\r\n    \"NPR\",\r\n    \"NZD\",\r\n    \"OMR\",\r\n    \"PAB\",\r\n    \"PEN\",\r\n    \"PGK\",\r\n    \"PHP\",\r\n    \"PKR\",\r\n    \"PLN\",\r\n    \"PYG\",\r\n    \"QAR\",\r\n    \"RON\",\r\n    \"RSD\",\r\n    \"RUB\",\r\n    \"RWF\",\r\n    \"SAR\",\r\n    \"SBD\",\r\n    \"SCR\",\r\n    \"SDG\",\r\n    \"SEK\",\r\n    \"SGD\",\r\n    \"SHP\",\r\n    \"SLL\",\r\n    \"SOS\",\r\n    \"SRD\",\r\n    \"SSP\",\r\n    \"STD\",\r\n    \"STN\",\r\n    \"SVC\",\r\n    \"SYP\",\r\n    \"SZL\",\r\n    \"THB\",\r\n    \"TJS\",\r\n    \"TMT\",\r\n    \"TND\",\r\n    \"TOP\",\r\n    \"TRY\",\r\n    \"TTD\",\r\n    \"TWD\",\r\n    \"TZS\",\r\n    \"UAH\",\r\n    \"UGX\",\r\n    \"USD\",\r\n    \"UYU\",\r\n    \"UZS\",\r\n    \"VES\",\r\n    \"VND\",\r\n    \"VUV\",\r\n    \"WST\",\r\n    \"XAF\",\r\n    \"XAG\",\r\n    \"XAU\",\r\n    \"XCD\",\r\n    \"XDR\",\r\n    \"XOF\",\r\n    \"XPD\",\r\n    \"XPF\",\r\n    \"XPT\",\r\n    \"YER\",\r\n    \"ZAR\",\r\n    \"ZMW\",\r\n    \"ZWL\",\r\n  ];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Amount from \"./Amount\";\r\nimport { options } from \"./Option.array\";\r\n\r\nconst CurrencyExchange = () => {\r\n  const [firstCurr, setFIrstCurr] = useState(\"USD\");\r\n  const [secondCurr, setSecondCurr] = useState(\"INR\");\r\n  const [currentRate, setCurrentRate] = useState(74.55);\r\n  const [amount, setAmount] = useState(0);\r\n  const [amountConverted, setAmountConverted] = useState(74.55);\r\n\r\n  if (amountConverted === null || currentRate === null) {\r\n    setAmountConverted(74.55);\r\n    setCurrentRate(74.55);\r\n  }\r\n\r\n  const getAmount = async () => {\r\n    const res = await axios.get(\r\n      `https://api.exchangerate.host/convert?from=${firstCurr}&to=${secondCurr}&amount=${amount}&base=USD`\r\n    );\r\n    // console.log(res);\r\n    setCurrentRate(res.data.info.rate);\r\n    setAmountConverted(res.data.result);\r\n  };\r\n\r\n  const onFirstCurrChange = (e) => {\r\n    setFIrstCurr(e.target.value);\r\n    setAmount(0);\r\n    getAmount();\r\n  };\r\n\r\n  const onSecondCurrChange = (e) => {\r\n    setSecondCurr(e.target.value);\r\n    setAmount(0);\r\n  };\r\n\r\n  const onAmountChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAmount();\r\n  }, [amount]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"convertor\">\r\n        <div className=\"from\">\r\n          <label htmlFor=\"currency1\">From</label>\r\n          <select\r\n            name=\"currency1\"\r\n            onChange={onFirstCurrChange}\r\n            defaultValue={firstCurr}\r\n            id=\"currency1\"\r\n          >\r\n            {options.map((item) => {\r\n              return <option key={item}>{item}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"to\">\r\n          <label htmlFor=\"currency2\">To</label>\r\n          <select\r\n            name=\"currency2\"\r\n            onChange={onSecondCurrChange}\r\n            defaultValue={secondCurr}\r\n            id=\"currency2\"\r\n          >\r\n            {options.map((item) => {\r\n              return <option key={item}>{item}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"swapButtonDiv\">\r\n          <p>Type Amount to Know the Live Rates</p>\r\n          <button className=\"swapButton\" disabled>\r\n            Rate : {currentRate === null ? \"Type amount\" : currentRate.toFixed(2)}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"amount\">\r\n        <Amount\r\n          amount={amount}\r\n          onAmountChange={onAmountChange}\r\n          amountConverted={amountConverted}\r\n          // currentRate={currentRate}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrencyExchange;\r\n","import React from \"react\";\r\nimport {ConverterBox} from \"../components/Converter.style\"\r\nimport CurrencyExchange from \"./CurrencyExchange\";\r\n\r\nconst Converter = () => {\r\n  return (\r\n    <ConverterBox>\r\n      <div className=\"converterText\">\r\n        <h1>currency <br/> converter</h1>\r\n        <p>Choose the currency and the <br/> amounts to get the exchange rate</p>\r\n      </div>\r\n      <CurrencyExchange />\r\n    </ConverterBox>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport { Container } from \"./components/Container.style\";\nimport Hero from \"./components/Hero\";\nimport Converter from \"./components/Converter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Nav />\n        <Hero />\n        <Converter />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}